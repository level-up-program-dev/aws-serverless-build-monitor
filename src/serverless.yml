service: aws-serverless-build-monitor
frameworkVersion: '3'

provider:
  name: aws
  region: ${opt:region, 'us-east-2'}
  stage: ${self:custom.currentStage}
  deploymentMethod: direct
  runtime: python3.9
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:DescribeTable
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:345218099459:table/levelup*
            - arn:aws:dynamodb:${self:provider.region}:345218099459:table/levelup*/index/*
        - Effect: Allow
          Action: 's3:ListBucket'
          Resource: '*'
        - Effect: Allow
          Action:
            - 's3:GetObject'
            - 's3:PutObject'
          Resource:
            - arn:aws:s3:::${self:custom.bucketName}/*

functions:
  api:
    handler: wsgi_handler.handler
    description: Level Up Build Monitor - Takes EventUID and list of team numbers as parameter
    environment:
      FLASK_ENV: development
      GITHUB_TOKEN: ${ssm:/GITHUB_TOKEN}
      S3_CACHE_BUCKET: ${self:custom.bucketName}
      LOGLEVEL: INFO
    events:
      - http:
          method: any
          path: /{proxy+}
          cors: true

  cacheRepoData:
    handler: github.handler
    description: Level Up Build Monitor Refresh - Fetch data from github
    timeout: 300
    environment:
      GITHUB_TOKEN: ${ssm:/GITHUB_TOKEN}
      LOGLEVEL: INFO
    events:
      - schedule:
          rate: rate(5 minutes)
          name: pull-gh-actions-status
          description: 'Runs regularly to fetch and update build status for monitor'
      - http:
          path: pull-gh-actions-status
          method: get
          integration: lambda
          cors: true
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"

resources:
  Resources:
    CacheBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        LifecycleConfiguration:
          Rules:
            - Id: DeleteObjectsOlderThanNDays
              Prefix: team
              Status: Enabled
              ExpirationInDays: 1

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-domain-manager

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!package.*'
    - '!Pipfile*'
    - '!*.md'
    - '!Makefile'
    - '!.venv'
    - '!dist'
    - 'templates/**'

custom:
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage}
  bucketName: levelup-monitor-cache-${self:custom.currentStage}
  wsgi:
    app: app.app
  pythonRequirements:
    usePipenv: false
    invalidateCaches: true
    strip: false
    slim: true
    slimPatternsAppendDefaults: false
    slimPatterns:
        - "**/*.pyc"
        - "**/*.pyo"
        - "**/__pycache__*"
  customDomain:
    domainName: monitor-${self:provider.stage}.levelup-program.com
    stage: ci
    basePath: ''
    certificateName: '*.levelup-program.com'
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: http
    autoDomain: true